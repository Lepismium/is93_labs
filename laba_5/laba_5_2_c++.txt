// lab_work_5_2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <math.h>
#include <windows.h>

using namespace std;

//объявление базового класса
//здесь будет конструктор по умолчанию
class TFigure
{
public:
    virtual double GetArea();      //виртуальная функция вычисления площади
    virtual double GetPerimeter(); //виртуальная функция вычисления периметра
};
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−-

//виртуальная функция вычисления площади
double TFigure::GetArea()
{
    return 0.0;
}

//виртуальная функция вычисления периметра
double TFigure::GetPerimeter()
{
    return 0.0;
}


//объявление класса –прямоугольник как наследника класса фигуры
class TRectangle : public TFigure
{
private:
    int x1; //координаты вершин прямоугольника
    int y1; //координаты вершин прямоугольника
    int x2; //координаты вершин прямоугольника
    int y2; //координаты вершин прямоугольника

public:
    TRectangle(int x1_init, int y1_init, int x2_init, int y2_init); //конструктор с параметрами
    double GetArea(); //перегруженная виртуальная функция вычисления площади
    double GetPerimeter(); //перегруженная виртуальная функция вычисления периметра
};
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−

//реализация методов класса – Trectangle – прямоугольника
TRectangle::TRectangle(int x1_init, int y1_init, int x2_init, int y2_init) //конструктор с параметрами
{
    x1 = x1_init;
    y1 = y1_init;
    x2 = x2_init;
    y2 = y2_init;
}
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−

//перегруженная виртуальная функция вычисления площади
double TRectangle::GetArea()
{
    return (x2 - x1) * (y2 - y1);
}
//------------------------------------------------

//перегруженная виртуальная функция вычисления периметра
double TRectangle::GetPerimeter()
{
    return 2 * ((x2 - x1) + (y2 - y1));
}
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−-

//===========================================================
//объявление класса –круг как наследника класса фигуры
class TCircle : public TFigure
{
private:
    double r; //радиус

public:
    TCircle(int r_init); //конструктор с параметрами
    double GetArea(); //перегруженная виртуальная функция вычисления площади
    double GetPerimeter(); //перегруженная виртуальная функция вычисления периметра
};
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−

//реализация методов класса – TCircle – круг
//конструктор с параметрами
TCircle::TCircle(int r_init)
{
    r = r_init;
}
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−

//перегруженная виртуальная функция вычисления площади
double TCircle::GetArea()
{
    return 3.141592653589793 * r * r;
}
//−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−-

//перегруженная виртуальная функция вычисления периметра
double TCircle::GetPerimeter()
{
    return 2 * 3.141592653589793 * r;
}
//-------------------------------------------

//=========================================

//главная программа
int main()
{
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    //в основной программе создать динамические объекты классов-наследников
    TRectangle* Rectangle;   //прямоугольник
    TCircle* Circle;         //круг

    Rectangle = new TRectangle(2, 5, 11, 14);
    Circle = new TCircle(8);

    //потом вычисляем и выводим площади и периметры фигур
    cout << "Площадь прямоугольника: " << Rectangle->GetArea() << endl;
    cout << "Периметр прямоугольника: " << Rectangle->GetPerimeter() << endl;
    cout << "Площадь круга: " << Circle->GetArea() << endl;
    cout << "Периметр круга: " << Circle->GetPerimeter() << endl;

    system("pause");
}

